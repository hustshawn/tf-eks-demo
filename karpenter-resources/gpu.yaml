apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: gpu-nodepool
spec:
  disruption:
    budgets:
    - nodes: 10%
    consolidateAfter: 30s
    consolidationPolicy: WhenEmpty
  template:
    metadata:
      labels:
        owner: data-engineer
    spec:
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: gpu
      taints:
      - key: nvidia.com/gpu
        value: "Exists"
        effect: "NoSchedule"
      requirements:
      - key: "karpenter.k8s.aws/instance-family"
        operator: In
        values: [ "g5", "g6", "g6e", "p4", "p4d", "p5", "p5en" ]
      - key: "kubernetes.io/arch"
        operator: In
        values: [ "amd64" ]
      - key: "karpenter.sh/capacity-type"
        operator: In
        values: [ "spot", "on-demand" ]
  limits:
    cpu: "5000"
---

apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: gpu
spec:
  amiFamily: AL2023
  amiSelectorTerms:
  - alias: al2023@latest
  # blockDeviceMappings:
  # - deviceName: /dev/xvda
  #   ebs:
  #     volumeSize: 100Gi
  #     volumeType: gp3
  #     encrypted: true
  instanceStorePolicy: RAID0
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 1
    httpTokens: required
  role: tf-eks-demo
  securityGroupSelectorTerms:
  - tags:
      karpenter.sh/discovery: tf-eks-demo
  subnetSelectorTerms:
  - tags:
      karpenter.sh/discovery: tf-eks-demo
  tags:
    karpenter.sh/discovery: tf-eks-demo
